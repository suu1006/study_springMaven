package user.dao;

import java.util.List;

import org.springframework.jdbc.core.BeanPropertyRowMapper;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;
import org.springframework.jdbc.core.support.JdbcDaoSupport;

import user.bean.UserDTO;

//public class UserDAOImpl extends JdbcDaoSupport implements UserDAO {

	// 스프링은 데이터 베이스 연동을 템플릿 클래스가 제공한다. 
//	private JdbcTemplate jdbcTemplate = null;
//	
//
//	public void setJdbcTemplate(JdbcTemplate jdbcTemplate) {
//		this.jdbcTemplate = jdbcTemplate;
//	}
	
	// support가 가지고 있기 때문에 템플릿 만들어주지 않아도됨.
	//setter메소드는 JdbcDaoSupport한테 가서 찾음. 

//	@Override
//	public void write(UserDTO userDTO) { 
//		String sql = "insert into usertable values(?,?,?)";
//		getJdbcTemplate().update(sql, 
//				userDTO.getName(),
//				userDTO.getId(),
//				userDTO.getPwd()); // update는 insert/update/delete를 다 가지고 있다.
//		//close안해도 템플릿이 알아서 다 해줌. 
//	}
//
//	@Override
//	public List<UserDTO> getUserList() {
//		String sql = "select * from usertable";
//		return getJdbcTemplate().query(sql,
//								new BeanPropertyRowMapper<UserDTO>(UserDTO.class)); // select는 쿼리로 들어감
//	} // 행단위로 usertable 클래스를 알아서 매핑해주는 클래스
//	
//
//				
//	}

public class UserDAOImpl extends NamedParameterJdbcTemplate  implements UserDAO {

	@Override
	public void write(UserDTO userDTO) {
		String sql = "insert into usertable values(?,?,?)";
		getJdbcTemplate().update(sql, 
				userDTO.getName(),
				userDTO.getId(),
				userDTO.getPwd());
		
	}

	@Override
	public List<UserDTO> getUserList() {
		// TODO Auto-generated method stub
		return null;
	}
	
	
}















