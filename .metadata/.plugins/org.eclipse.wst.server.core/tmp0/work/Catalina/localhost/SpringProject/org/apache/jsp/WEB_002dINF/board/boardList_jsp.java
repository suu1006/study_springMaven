/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.62
 * Generated at: 2022-06-30 01:11:28 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class boardList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("jar:file:/C:/spring/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/SpringProject/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1652115225267L));
    _jspx_dependants.put("jar:file:/C:/spring/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/SpringProject/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write(" \r\n");
      out.write("\r\n");
      out.write("<!-- <!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title> -->  <!-- 글 목록을 보여주는곳 -->\r\n");
      out.write("<style type = \"text/css\">\r\n");
      out.write(".subjectA:link {color : black; text-decoration : none;} /*링크를 올렸을때 바로 나오는 색*/\r\n");
      out.write(".subjectA:visited {color : black; text-decoration : none;} /*클릭한 뒤*/\r\n");
      out.write(".subjectA:hover {color : green; text-decoration : underline;} /*마우스만 올라갔을때*/\r\n");
      out.write(".subjectA:active {color : black; text-decoration : none;} /*마우스를 꾹 눌렀을때*/\r\n");
      out.write("\r\n");
      out.write("#currentPaging {\r\n");
      out.write("	color : red;\r\n");
      out.write("	text-deciration : underline;\r\n");
      out.write("	cursor : pointer;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#paging {\r\n");
      out.write("	color : black;\r\n");
      out.write("	text-decoration : none;\r\n");
      out.write("	 cursor : pointer; \r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("<!-- jsp (최종목적지)로 request가 배달이 왔고 이제 이걸 풀어서 보여주면된다.  -->\r\n");
      out.write("<input type = \"text\" id =\"pg\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.pg}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("<table id=\"boardListTable\" border=\"1\" cellspacing=\"0\" cellpadding=\"5\" frame=\"hsides\" rules=\"rows\">\r\n");
      out.write("	<tr>\r\n");
      out.write("		<th width=\"100\">글번호</th>\r\n");
      out.write("		<th width=\"300\">제목</th>\r\n");
      out.write("		<th width=\"100\">작성자</th>\r\n");
      out.write("		<th width=\"100\">작성일</th>\r\n");
      out.write("		<th width=\"100\">조회수</th>\r\n");
      out.write("	</tr>\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("</table>\r\n");
      out.write("<div style = \"float : left; width : 700px; text-align : center;\">\r\n");
      out.write("<input type = \"button\"  value = \"글쓰기\" style = \"margin : 5px; float :left;\" onclick = \"location.href = '/SpringProject/board/boardWriteForm'\">\r\n");
      out.write("\r\n");
      out.write("<div id = \"boardPagingDiv\"></div> <!-- 페이징 하는 부분 ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${boardPaging.pagingHTML}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" -->\r\n");
      out.write("		\r\n");
      out.write("	 </div>\r\n");
      out.write("	 <br><br>\r\n");
      out.write("	 \r\n");
      out.write("	 <!-- 글 검색 -->\r\n");
      out.write("	 <form id = \"boardSearchForm\"> \r\n");
      out.write("		 <input type=\"hidden\" name=\"pg\" id =\"searchPg\" value=\"1\"><!--검색결과:  나는 무조건 1페이지에 뿌려줘야해 !  -->\r\n");
      out.write("		 <div style= \"margin-left:200px; text-align:left;\">\r\n");
      out.write("		 <select name = \"searchOption\">\r\n");
      out.write("		 	<option value=\"subject\">제목</option>\r\n");
      out.write("		 	<option value=\"id\">작성자</option>\r\n");
      out.write("		 	</select>\r\n");
      out.write("		 	<input type=\"search\" name=\"keyword\" id=\"keyword\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${keyword}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("		 	<input type=\"button\" value=\"검색\" id=\"boardSearchBtn\">\r\n");
      out.write("		 </div>\r\n");
      out.write("	</form>\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("<script type=\"text/javascript\"  src=\"http://code.jQuery.com/jquery-3.6.0.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"../js/boardList.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("function boardPaging(pg2) {  \r\n");
      out.write("	var keyword = $('#keyword').val();\r\n");
      out.write("	if (keyword == '') {\r\n");
      out.write("		location.href = \"boardList?pg=\" + pg2; // 페이징처리할때 쓴 pg2\r\n");
      out.write("\r\n");
      out.write("	} else {\r\n");
      out.write("		/* location.href = \"/miniProject/board/boardSearch.do?pg=\" + pg2 \r\n");
      out.write("				+ \"&searchOption=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${searchOption}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("&keyword=\" + keyword;/* 자바스크립트에서 한글처리해달라고 하는것 */ \r\n");
      out.write("			$('#searchPg').val(pg2); //searchPg가 1로 고정되어있기 때문에 다시 검색할땐 페이지값이 1로 바뀌어야한다. 그래야 찾을 수 있다 .\r\n");
      out.write("					//강제 이벤트 발생\r\n");
      out.write("			$('#boardSearchBtn').trigger('click'); // 강제로 이벤트를 발생시킨다.\r\n");
      out.write("			\r\n");
      out.write("			//다시 검색버튼을 누르면 searchPg를 1로 바꾸어야한다. \r\n");
      out.write("			$('#searchPg').val(1);\r\n");
      out.write("	}		\r\n");
      out.write("}\r\n");
      out.write("	\r\n");
      out.write("</script>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
