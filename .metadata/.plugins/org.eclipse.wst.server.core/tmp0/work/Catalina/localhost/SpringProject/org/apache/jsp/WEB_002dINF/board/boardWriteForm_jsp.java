/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.62
 * Generated at: 2022-06-30 02:10:55 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class boardWriteForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>글쓰기</title>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("   .alertMsg{ \r\n");
      out.write("      background-color : yellow;\r\n");
      out.write("      color : red;\r\n");
      out.write("      font-size : 10px;\r\n");
      out.write("      width : 150px;\r\n");
      out.write("   }\r\n");
      out.write("</style>\r\n");
      out.write("<body>\r\n");
      out.write("<h3>글쓰기</h3>\r\n");
      out.write("<form name=\"boardWriteForm\"><!--  id = \"boardWriteForm\" action= \"/miniProject/board/boardWrite.do\" method=\"post\" 지워도됨 -->\r\n");
      out.write("	<table border=\"1\" cellspacing=\"0\" cellpadding=\"5\"> <!-- 얘는 무조건 1페이지로 들어가니까 페이지 번호나 원글번호 이런거 안받음. -->\r\n");
      out.write("         <tr>\r\n");
      out.write("            <td width=\"70\" align=\"center\">제목</td>\r\n");
      out.write("            <td>\r\n");
      out.write("            	<input type=\"text\" name = \"subject\" id = \"subject\" placeholder=\"제목을 입력하세요 \">\r\n");
      out.write("            	<div class=\"alertMsg\" id = \"subjectDiv\"></div>    \r\n");
      out.write("            </td>        \r\n");
      out.write("         </tr>\r\n");
      out.write("\r\n");
      out.write("         <tr>\r\n");
      out.write("            <td align=\"center\">내용</td>\r\n");
      out.write("            <td>\r\n");
      out.write("            	<textarea name=\"content\" id=\"content\" rows=\"15\" cols=\"50\" placeholder=\"내용을 입력하세요 \"></textarea>\r\n");
      out.write("            	<div class=\"alertMsg\" id=\"contentDiv\"></div>\r\n");
      out.write("            </td>\r\n");
      out.write("         </tr>\r\n");
      out.write("         \r\n");
      out.write("         <tr>\r\n");
      out.write("            <td colspan=\"2\" align=\"center\"> \r\n");
      out.write("            <!--<button>버튼 태그는 자동으로 submit 해줌 이미지가 들어와서 예쁘긴함 페이지 안넘어가게 하려면 return false 잡아줘야함  -->\r\n");
      out.write("               	<input type=\"button\" value=\"글쓰기\" id=\"BoardWriteBtn\">\r\n");
      out.write("               	<input type=\"reset\" value=\"다시작성\">\r\n");
      out.write("				<input type=\"button\" value=\"목록\" onclick=\"location.href='/SpringProject/board/boardList'\">\r\n");
      out.write("            </td>\r\n");
      out.write("         </tr>\r\n");
      out.write("         \r\n");
      out.write("      </table>\r\n");
      out.write("   </form>\r\n");
      out.write("   \r\n");
      out.write("<script src=\"//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"../script/member.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"../script/member_jQuery.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("// 유효성 검사\r\n");
      out.write("$('#BoardWriteBtn').click(function(){\r\n");
      out.write("	 \r\n");
      out.write("	 $('#subjectDiv').empty(); // Div 영역을 클릭하면 비워라  >> 비우지않으면 경고문이 떠있으니까 empty를 꼭 써주기 / 다음번에 글씨가 들어갔을 때 아무이상 없음.\r\n");
      out.write("	 $('#contentDiv').empty();\r\n");
      out.write("	 \r\n");
      out.write("	 if($('#subject').val() == ''){\r\n");
      out.write("	      $('#subjectDiv').html('제목을 입력하세요'); \r\n");
      out.write("	      $('#subjectDiv').css('color', 'red'); /* 여기서부터 css 3줄은 위의 alertMsg로 잡아놨기 때문에 지워도됨 */\r\n");
      out.write("	      $('#subjectDiv').css('font-size', '8pt');\r\n");
      out.write("	      $('#subjectDiv').css('font-weight', 'bold');\r\n");
      out.write("	   \r\n");
      out.write("	 }else if($('#content').val() == ''){\r\n");
      out.write("	      $('#contentDiv').html('내용을 입력하세요');\r\n");
      out.write("	      $('#contentDiv').css('color', 'red');\r\n");
      out.write("	      $('#contentDiv').css('font-size', '8pt');\r\n");
      out.write("	      $('#contentDiv').css('font-weight', 'bold');\r\n");
      out.write("	 }else {\r\n");
      out.write("		 $.ajax({ // 지정해준 페이지에 화면 안바뀐채로 데이터 가져오는게 ajax의 기능\r\n");
      out.write("	    	  type :'post',\r\n");
      out.write("	    	  url : '/SpringProject/board/boardWrite',  // 서버주소\r\n");
      out.write("	    	  data : {\r\n");
      out.write("					 'subject' : $('#subject').val(),\r\n");
      out.write("					 'content' : $('#content').val()},\r\n");
      out.write("	    		    		 \r\n");
      out.write("	    	  success : function() { // 갔다가 다시 여기로 오게됨 \r\n");
      out.write("	   			  alert('게시글을 등록하였습니다.');\r\n");
      out.write("	   			  location.href = '/SpringProject/board/boardList';\r\n");
      out.write("	   		  },\r\n");
      out.write("	   		 error: function(err){\r\n");
      out.write("		         console.log(err);\r\n");
      out.write("		 		} \r\n");
      out.write("			}); \r\n");
      out.write("		}\r\n");
      out.write("	});\r\n");
      out.write("/*boardList.js파일에서 >  $(document).ready(function(){});  = $(function(){ }); >> 똑같다!!! */\r\n");
      out.write("</script>\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
